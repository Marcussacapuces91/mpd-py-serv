#! /bin/sh
### BEGIN INIT INFO
# Provides:          skeleton
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Interface Web pour MPD
# Description:       Cette interface est un serveur Web en Python (v3) qui écoute sur le port 8080
#                    et transmet des instruction au named pipe de MPD.
### END INIT INFO

# Author: Marc Sibert <marc@sibert.fr>
#
# Please remove the "Author" lines above and replace them
# with your own name if you copy and modify this script.

# Do NOT "set -e"

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Service Radio et son interface Web"
NAME=radio
DAEMON_PATH=/usr/local/bin/$NAME
DAEMON=$DAEMON_PATH/start.py
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
USER=root
HTTP_PROXY="http://msibert:Dorudise0613@autoproxy.mousquetaires.com:8080"

# Exit if the package is not installed
[ -x "$DAEMON_PATH" ] || exit 0

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

# Définition du proxy http pour GIT & pour le serveur python.
[ -z "$HTTP_PROXY" ] || export http_proxy="$HTTP_PROXY"

case "$1" in
    start)
	echo "Démarrage du serveur $NAME :"
# Vérification de la possibilité de démarrer le service
	start-stop-daemon --test --start --background --chdir $DAEMON_PATH --quiet --make-pidfile --pidfile $PIDFILE --exec /usr/bin/python3 -- $DAEMON
	ERR=$?
	case $ERR in
		0)	;;
		1)	echo " Echec, service déjà démarré."
			exit 1
			;;
		*)	echo " Echec, erreur $ERR."
			exit $ERR;
			;;
	esac
# Mise à jour du GitHub
	echo "  Déplacement dans $DAEMON_PATH."
        cd $DAEMON_PATH
	echo -n "  Mise à jour du code..."
	git pull >/dev/null 2>&1
	if [ "$?" = 0 ]; then echo " OK."; else echo " Echec, poursuite."; fi
	echo -n "  Lancement du service..."
	start-stop-daemon --start --background --chdir $DAEMON_PATH --verbose --make-pidfile --pidfile $PIDFILE --exec /usr/bin/python3 -- $DAEMON 2>> $NAME.log >> $NAME.err
	ERR=$?
	if [ "$ERR" = 0 ]; then echo " Fait."; else echo " Echec, erreur $ERR."; exit $ERR; fi
        ;;

  stop)
	echo "Arrêt du serveur $NAME :"
	start-stop-daemon --test --stop --quiet --pidfile $PIDFILE --exec /usr/bin/python3 -- $DAEMON
	ERR=$?
	case $ERR in
		0)	;;
		1)	echo "  Echec, service déjà arrêté."
			exit 1
			;;
		*)	echo "  Echec, erreur $ERR."
			exit $ERR
			;;
	esac
	PID=`cat $PIDFILE`
	echo -n "  Arrêt du service (PID=$PID)..."
	start-stop-daemon --stop --quiet --pidfile $PIDFILE --exec /usr/bin/python3 -- $DAEMON
	ERR=$?
	if [ "$ERR" = 0 ]; then echo " OK."; else echo " Echec, erreur $ERR."; exit $ERR; fi
	echo "  Suppression du fichier $PIDFILE."
	rm $PIDFILE
        ;;

  restart)
        $0 stop
        $0 start
        ;;

  status)
	echo "Etat du serveur $NAME :"
	start-stop-daemon --status --quiet --pidfile $PIDFILE --exec /usr/bin/python3 -- $DAEMON
	ERR=$?
	case $ERR in
		0)	PID=`cat $PIDFILE`
			echo "  Fonctionnel (PID=$PID)."
			;;
		1)	echo "  Arrêté, mais $PIDFILE présent."
			;;
		3)	echo "  Arrêté."
			;;
		4)	echo "  Indéterminé."
			;;
		*)	echo "  Echec, erreur $ERR."
			;;
	esac
        ;;

  *)
        echo "Usage: $SCRIPTNAME {start|stop|restart|status}" >&2
        exit 3
        ;;
esac

:
